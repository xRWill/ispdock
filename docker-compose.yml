version: '3.5'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  acme:
    driver: ${VOLUMES_DRIVER}
  grafana:
    driver: ${VOLUMES_DRIVER}


services:
  ### NGINX-Proxy #########################################
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - ${NGINX_CONFIG_PATH}:/etc/nginx/conf.d
      - ${NGINX_SITES_PATH}:/etc/nginx/vhost.d
      - ${APP_CODE_PATH_HOST}:/usr/share/nginx/html
      - ${NGINX_SSL_PATH}:/etc/nginx/certs:ro
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ./nginx/logrotate/nginx:/etc/logrotate.d/nginx
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - frontend
      - backend
    restart: unless-stopped
    
  ###### docker-gen for NGINX-Proxy #######################
  docker-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - ${NGINX_CONFIG_PATH}:/etc/nginx/conf.d
      - ${NGINX_SITES_PATH}:/etc/nginx/vhost.d
      - ${NGINX_SSL_PATH}:/etc/nginx/certs:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
    depends_on:
      - nginx-proxy
    networks:
      - backend
    restart: unless-stopped

  ###### LetsEncrypt for NGINX-Proxy ######################
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - ${NGINX_CONFIG_PATH}:/etc/nginx/conf.d
      - ${NGINX_SITES_PATH}:/etc/nginx/vhost.d
      - ${APP_CODE_PATH_HOST}:/usr/share/nginx/html
      - ${NGINX_SSL_PATH}:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
      - docker-gen
    networks:
      - backend
    restart: unless-stopped

  ### Looking-Glass #######################################
  looking-glass:
    image: gmazoyer/looking-glass
    container_name: looking-glass
    # ports:
      # - "${LOOKINGGLASS_HOST_HTTP_PORT}:80" # Uncomment to use standalony 
    volumes:
      - ${LOOKINGGLASS_CONFIG_FILE}:/var/www/html/config.php
      - ${LOOKINGGLASS_LOGO_FILE}:/var/www/html/logo.png
      - ${LOOKINGGLASS_LOG_FILE}:/var/log/looking-glass.log
    environment:
      - VIRTUAL_HOST=${LOOKINGGLASS_HOSTNAME} # Comment to use standalony 
      - LETSENCRYPT_HOST=${LOOKINGGLASS_HOSTNAME} # Comment to use standalony 
    depends_on:
      - nginx-proxy # Comment to use standalony 
    networks:
      - frontend
    restart: unless-stopped

  ### MySQL ###############################################

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    restart: unless-stopped
    command:
    - mysqld
    - --character-set-server=utf8
    - --collation-server=utf8_bin
    - --default-authentication-plugin=mysql_native_password
  #   - --require-secure-transport
  #   - --ssl-ca=/run/secrets/root-ca.pem
  #   - --ssl-cert=/run/secrets/server-cert.pem
  #   - --ssl-key=/run/secrets/server-key.pem
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql:rw
    env_file:
    - ./mysql/.env_db_mysql
    secrets:
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
  #   - server-key.pem
  #   - server-cert.pem
  #   - root-ca.pem
    stop_grace_period: 1m
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      backend:
        aliases:
          - mysql-server

  ### Grafana #############################################
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    volumes:
      - grafana:/var/lib/grafana
      - /etc/timezone:/etc/timezone:ro
      - ./grafana/config/custom.ini:/etc/grafana/grafana.ini
    environment:
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
      - GF_ROOT_URL=https://${GRAFANA_HOSTNAME}
      - VIRTUAL_HOST=${GRAFANA_HOSTNAME}
      - LETSENCRYPT_HOST=${GRAFANA_HOSTNAME}
    networks:
      - frontend
      - backend
    ports:
      - "${GRAFANA_HOST_HTTP_PORT}:3000"


  ### Zabbix-Server #######################################
  zabbix-server:
    container_name: zabbix-server
    image: zabbix/zabbix-server-mysql:${ZABBIX_VERSION}
    restart: unless-stopped
    ports:
      - "${ZABBIX_PORT}:10051"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./zabbix/zbx_env/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro
      - ./zabbix/zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
      - ./zabbix/zbx_env/var/lib/zabbix/export:/var/lib/zabbix/export:rw
      - ./zabbix/zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - ./zabbix/zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - ./zabbix/zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
      - ./zabbix/zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro
      - ./zabbix/zbx_env/var/lib/zabbix/snmptraps:/var/lib/zabbix/snmptraps:ro
    env_file:
      - ./zabbix/env_vars/.env_db_mysql
      - ./zabbix/env_vars/.env_srv
    secrets:
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
    depends_on:
      - mysql
    networks:
      backend:
        aliases:
          - zabbix-server
      frontend:
    stop_grace_period: 30s
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65000
      - net.ipv4.conf.all.accept_redirects=0
      - net.ipv4.conf.all.secure_redirects=0
      - net.ipv4.conf.all.send_redirects=0
    labels:
      com.zabbix.description: "Zabbix server with MySQL database support"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-server"
      com.zabbix.dbtype: "mysql"
      com.zabbix.os: "alpine"


  ### Zabbix-frontend #######################################
  zabbix-frontend:
    container_name: zabbix-frontend
    image: zabbix/zabbix-web-nginx-mysql:${ZABBIX_VERSION}
    restart: unless-stopped
    # links:
    #   - zabbix-server:zabbix-server
    #   - mysql:mysql-server
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./zabbix/zbx_env/etc/ssl/nginx:/etc/ssl/nginx:ro
      - ./zabbix/zbx_env/usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro
    env_file:
      - ./zabbix/env_vars/.env_db_mysql
      - ./zabbix/env_vars/.env_web
    secrets:
      - MYSQL_USER
      - MYSQL_PASSWORD
    depends_on:
      - zabbix-server
      - mysql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=${ZABBIX_HOSTNAME}
      - LETSENCRYPT_HOST=${ZABBIX_HOSTNAME}
    #  - LETSENCRYPT_EMAIL=email@domain.com
    # expose:
    #   - 8080
    ports:
      - "${ZABBIX_WEB_PORT}:8080"
    networks:
      - frontend
      - backend
    stop_grace_period: 10s
    sysctls:
      - net.core.somaxconn=65535
    labels:
      com.zabbix.description: "Zabbix frontend on Nginx web-server with MySQL database support"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-frontend"
      com.zabbix.webserver: "nginx"
      com.zabbix.dbtype: "mysql"
      com.zabbix.os: "alpine"

#### Zabbix-Agent
  zabbix-agent:
    container_name: zabbix-agent2
    image: zabbix/zabbix-agent2:${ZABBIX_VERSION}
    restart: always
    ports:
      - "10050:10050"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./zabbix/zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
      - ./zabbix/zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - ./zabbix/zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - ./zabbix/zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
      - /var/run/docker.sock:/var/run/docker.sock
    # links:
      #  - zabbix-server:zabbix-server
    env_file:
      - ./zabbix/env_vars/.env_agent
    privileged: true
    pid: "host"
    networks:
      backend:
        aliases:
        - zabbix-agent
        - zabbix-agent-passive
        - zabbix-agent-alpine
    stop_grace_period: 5s
    labels:
      com.zabbix.description: "Zabbix agent"
      com.zabbix.company: "Zabbix LLC"
      com.zabbix.component: "zabbix-agentd"
      com.zabbix.os: "alpine"

#######
## Speedtest Servers
#######

#### nPerf-Server
  nperf-server:
    container_name: nperf-server
    build: ./nperf
    restart: unless-stopped
    ports:
      - "${NPERF_WEB_PORT:-8080}:8080"
      - "${NPERF_TLS_PORT:-8443}:8443"
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=${NPERF_HOSTNAME}
      # - LETSENCRYPT_HOST=${NPERF_HOSTNAME}
    networks:
      - backend

#### Minha Conex√£o - Server
  mc-server:
    container_name: mc-server
    build: ./mc-server
    restart: unless-stopped
    ports:
      - "${MC_SERVER_WEB_PORT:-9090}:9090"
    environment:
      - VIRTUAL_PORT=9090
      - VIRTUAL_HOST=${MC_SERVER_HOSTNAME}
      # - LETSENCRYPT_HOST=${MC_SERVER_HOSTNAME}
    networks:
      - backend

#### ###### Secrets 
secrets:
  MYSQL_USER:
    file: ./mysql/.MYSQL_USER
  MYSQL_PASSWORD:
    file: ./mysql/.MYSQL_PASSWORD
  MYSQL_ROOT_PASSWORD:
    file: ./mysql/.MYSQL_ROOT_PASSWORD
